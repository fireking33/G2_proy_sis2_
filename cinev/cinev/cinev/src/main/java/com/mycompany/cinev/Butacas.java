/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cinev;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;

/**
 *
 * @author fband
 */
public class Butacas extends javax.swing.JFrame {
    
    private String valorSeleccionado;
    private String formatoSeleccionado;
    
  int xMouse, yMouse;
  private String rutaImagen; 
  private Conexion conexion = new Conexion();
  Connection con = conexion.establecerConexion();
  
    // Variables de conexi√≥n y almacenamiento de asientos
    private static final ArrayList<String> asientosSeleccionados = new ArrayList<>();
    private static final int FILAS = 9;
    private static final int COLUMNAS = 16;
    private final JToggleButton[][] botonesAsientos = new JToggleButton[FILAS][COLUMNAS];
  
    /**
     * Creates new form InterfazRegPeli
     */
    public Butacas() {
        this.valorSeleccionado = valorSeleccionado;
        initComponents();
        setLocationRelativeTo(null);
        crearBotones();
    }
    
    public Butacas(String valorSeleccionado) {
        this.valorSeleccionado = valorSeleccionado;
        initComponents();
        formatoSeleccionado = valorSeleccionado;
        setLocationRelativeTo(null);
        crearBotones();
    }
    
    public String getValorSeleccionado() {
        return valorSeleccionado;
    }
    
    private InterfazVenta interfazVenta; // Guardar la instancia de InterfazVenta

    // Constructor que recibe la instancia de InterfazVenta
    public Butacas(InterfazVenta interfazVenta) {
        this.interfazVenta = interfazVenta; // Asignamos la instancia
        initComponents();
        setLocationRelativeTo(null);
        crearBotones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        prece = new javax.swing.JPanel();
        guardar = new javax.swing.JPanel();
        cerrarlbl = new javax.swing.JLabel();
        titulolbl = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(11, 23, 128));
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        bg.setBackground(new java.awt.Color(13, 20, 58));
        bg.setMinimumSize(new java.awt.Dimension(830, 500));
        bg.setPreferredSize(new java.awt.Dimension(850, 500));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        prece.setBackground(new java.awt.Color(13, 20, 58));
        prece.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                preceMouseDragged(evt);
            }
        });
        prece.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                preceMousePressed(evt);
            }
        });

        guardar.setBackground(new java.awt.Color(102, 0, 102));
        guardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                guardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                guardarMouseExited(evt);
            }
        });

        cerrarlbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cerrarlbl.setForeground(new java.awt.Color(255, 255, 255));
        cerrarlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cerrarlbl.setText("x");

        javax.swing.GroupLayout guardarLayout = new javax.swing.GroupLayout(guardar);
        guardar.setLayout(guardarLayout);
        guardarLayout.setHorizontalGroup(
            guardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guardarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cerrarlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        guardarLayout.setVerticalGroup(
            guardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guardarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cerrarlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        titulolbl.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        titulolbl.setForeground(new java.awt.Color(255, 255, 255));
        titulolbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulolbl.setText("Butacas");

        javax.swing.GroupLayout preceLayout = new javax.swing.GroupLayout(prece);
        prece.setLayout(preceLayout);
        preceLayout.setHorizontalGroup(
            preceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, preceLayout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(titulolbl, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        preceLayout.setVerticalGroup(
            preceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, preceLayout.createSequentialGroup()
                .addGroup(preceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(preceLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(titulolbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        bg.add(prece, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 730, -1));

        jButton1.setText("CONTINUAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        bg.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(669, 460, 140, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseEntered
       guardar.setBackground(Color.red);
    }//GEN-LAST:event_guardarMouseEntered

    private void crearBotones() {
        bg.setLayout(null);

        int ejeX = 10, ejeY = 55; // Se suben los asientos
        Font fuenteLetra = new Font("Century Gothic", Font.BOLD, 11);

        for (int i = 0; i < FILAS; i++) {
            for (int j = 0; j < COLUMNAS; j++) {
                botonesAsientos[i][j] = new JToggleButton();
                botonesAsientos[i][j].setBounds(ejeX, ejeY, 50, 40);
                botonesAsientos[i][j].setFont(fuenteLetra);
                botonesAsientos[i][j].setForeground(Color.WHITE);
                botonesAsientos[i][j].setBackground(Color.BLACK);
                botonesAsientos[i][j].setText(Character.toString((char) ('A' + i)) + (j + 1));
                botonesAsientos[i][j].addActionListener(new AccionBotones());
                bg.add(botonesAsientos[i][j]);

                ejeX += 51;
            }
            ejeX = 10;
            ejeY += 42;
        }

        bg.revalidate();
        bg.repaint();
    }

    private class AccionBotones implements ActionListener {
    @Override
    public void actionPerformed(ActionEvent ae) {
        for (int i = 0; i < FILAS; i++) {
            for (int j = 0; j < COLUMNAS; j++) {
                if (ae.getSource().equals(botonesAsientos[i][j])) {
                    String asiento = botonesAsientos[i][j].getText();

                    if (botonesAsientos[i][j].getBackground().equals(Color.CYAN)) {
                        asientosSeleccionados.remove(asiento);
                        botonesAsientos[i][j].setBackground(Color.BLACK);
                        botonesAsientos[i][j].setForeground(Color.WHITE);
                    } else {
                        asientosSeleccionados.add(asiento);
                        botonesAsientos[i][j].setBackground(Color.CYAN);
                        botonesAsientos[i][j].setForeground(Color.BLACK);
                    }
                }
            }
        }
    }
}

    
    /**
     * M√©todo para obtener la lista de asientos seleccionados.
     */
    public static ArrayList<String> obtenerAsientosSeleccionados() {
        return new ArrayList<>(asientosSeleccionados);
    }
    
    private void guardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseExited
        guardar.setBackground(new Color(102,0,102));
    }//GEN-LAST:event_guardarMouseExited

    private void preceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_preceMousePressed
        xMouse=evt.getX();
        yMouse=evt.getY();
    }//GEN-LAST:event_preceMousePressed

    private void preceMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_preceMouseDragged
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        
        this.setLocation(x-xMouse,y-yMouse);
    }//GEN-LAST:event_preceMouseDragged

    private void guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseClicked

        System.exit(0);    }//GEN-LAST:event_guardarMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        calcularPrecioTotal();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazVenta().setVisible(true);
            }
        });
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
 * M√©todo para calcular el precio total en base a los asientos seleccionados
 * y el formato elegido en la interfaz InterfazVenta.
 */
    public void calcularPrecioTotal() {
        // Obtener la lista de asientos seleccionados
        ArrayList<String> asientos = obtenerAsientosSeleccionados();
        int cantidadAsientos = asientos.size();

        if (cantidadAsientos == 0) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione al menos un asiento.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Definir precios por formato
        int precioUnitario;
        switch (formatoSeleccionado) {
            case "2D":
                precioUnitario = 30;
                break;
            case "3D":
                precioUnitario = 40;
                break;
            case "4D":
                precioUnitario = 50;
                break;
            default:
                JOptionPane.showMessageDialog(this, "Formato no v√°lido.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
        }

        // Calcular el precio total
        int precioTotal = cantidadAsientos * precioUnitario;

        // Mostrar el resultado
        JOptionPane.showMessageDialog(this, "Cantidad de asientos: " + cantidadAsientos +
                "\nPrecio unitario: " + precioUnitario + " Bs." +
                "\nPrecio total: " + precioTotal + " Bs.", 
                "Resumen de compra", JOptionPane.INFORMATION_MESSAGE);
    }

    
      public static boolean esTextoNumerico(String texto) {
        // Si el texto es nulo o est√° vac√≠o, no es num√©rico.
        if (texto == null || texto.equals("")) {
            return false;
        }

        // Recorremos cada car√°cter del texto.
        for (int i = 0; i < texto.length(); i++) {
            char c = texto.charAt(i); // Obtenemos el car√°cter en la posici√≥n actual.
            if (c < '0' || c > '9') { // Verificamos si no es un n√∫mero.
                return false; // Si no es un n√∫mero, devolvemos false.
            }
        }

        // Si todos los caracteres son n√∫meros, devolvemos true.
        return true;
    }
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Butacas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Butacas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Butacas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Butacas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Butacas().setVisible(true);
            }
        });
    }
    private void SetImageLabel(JLabel labelName, String root){
        
        ImageIcon image = new ImageIcon(root);
        Icon icon = new ImageIcon(
                image.getImage().getScaledInstance(labelName.getWidth(), labelName.getHeight(), Image.SCALE_DEFAULT));
        labelName.setIcon(icon);
        this.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JLabel cerrarlbl;
    private javax.swing.JPanel guardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel prece;
    private javax.swing.JLabel titulolbl;
    // End of variables declaration//GEN-END:variables
}
