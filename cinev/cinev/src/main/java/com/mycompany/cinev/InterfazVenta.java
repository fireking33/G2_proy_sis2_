/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cinev;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
/**
 *
 * @author fband
 */
public class InterfazVenta extends javax.swing.JFrame {
    
  int xMouse, yMouse;
  private String rutaImagen; 
  private Conexion conexion = new Conexion();
    Connection con = conexion.establecerConexion();
  private String usuarioCajero;
  private int idfun;
  private int numAsientos;
    
    /**
     * Creates new form InterfazRegPeli
     */
    public InterfazVenta(String usuarioCajero) {
        initComponents();
        this.setLocationRelativeTo(this);
        cargarPeliculas();
        this.usuarioCajero=usuarioCajero;
        this.idfun=idfun;
        this.numAsientos=numAsientos;
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        menu = new javax.swing.JPanel();
        salirF = new javax.swing.JPanel();
        menulbl = new javax.swing.JLabel();
        prece = new javax.swing.JPanel();
        guardar = new javax.swing.JPanel();
        cerrarlbl = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        reservarBtn = new javax.swing.JButton();
        datosPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        apellidoText = new javax.swing.JTextField();
        nombreText = new javax.swing.JTextField();
        ciText = new javax.swing.JTextField();
        fechaText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        listaSalas = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        peliculasComboBox = new javax.swing.JComboBox<>();
        seleccionaSala = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        paraTotalPanel = new javax.swing.JPanel();
        paraPrecio = new javax.swing.JLabel();
        cancelarBtn = new javax.swing.JButton();
        buscarBtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        horarioComboBox1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        paraFormato = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(11, 23, 128));
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        bg.setBackground(new java.awt.Color(13, 20, 58));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menu.setBackground(new java.awt.Color(17, 27, 82));
        menu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        salirF.setBackground(new java.awt.Color(17, 27, 82));
        salirF.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salirF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salirFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                salirFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                salirFMouseExited(evt);
            }
        });

        menulbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        menulbl.setForeground(new java.awt.Color(204, 204, 204));
        menulbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menulbl.setText("SALIR");

        javax.swing.GroupLayout salirFLayout = new javax.swing.GroupLayout(salirF);
        salirF.setLayout(salirFLayout);
        salirFLayout.setHorizontalGroup(
            salirFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salirFLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menulbl)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        salirFLayout.setVerticalGroup(
            salirFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, salirFLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(menulbl)
                .addContainerGap())
        );

        menu.add(salirF, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 30));

        bg.add(menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 500));

        prece.setBackground(new java.awt.Color(13, 20, 58));
        prece.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                preceMouseDragged(evt);
            }
        });
        prece.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                preceMousePressed(evt);
            }
        });

        guardar.setBackground(new java.awt.Color(102, 0, 102));
        guardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                guardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                guardarMouseExited(evt);
            }
        });

        cerrarlbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cerrarlbl.setForeground(new java.awt.Color(255, 255, 255));
        cerrarlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cerrarlbl.setText("x");

        javax.swing.GroupLayout guardarLayout = new javax.swing.GroupLayout(guardar);
        guardar.setLayout(guardarLayout);
        guardarLayout.setHorizontalGroup(
            guardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, guardarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cerrarlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        guardarLayout.setVerticalGroup(
            guardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, guardarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cerrarlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Venta de Tickets");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout preceLayout = new javax.swing.GroupLayout(prece);
        prece.setLayout(preceLayout);
        preceLayout.setHorizontalGroup(
            preceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, preceLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        preceLayout.setVerticalGroup(
            preceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preceLayout.createSequentialGroup()
                .addComponent(guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, preceLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bg.add(prece, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 730, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("bs.");
        bg.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 320, 30, 40));

        reservarBtn.setBackground(new java.awt.Color(0, 255, 0));
        reservarBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        reservarBtn.setText("CONFIRMAR");
        reservarBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        reservarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservarBtnActionPerformed(evt);
            }
        });
        bg.add(reservarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 380, 170, 40));

        datosPanel.setBackground(new java.awt.Color(153, 102, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombres:");

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Apellidos:");

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("CI:");

        apellidoText.setBackground(new java.awt.Color(153, 153, 255));
        apellidoText.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        apellidoText.setForeground(new java.awt.Color(255, 255, 255));
        apellidoText.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        apellidoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellidoTextActionPerformed(evt);
            }
        });

        nombreText.setBackground(new java.awt.Color(153, 153, 255));
        nombreText.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        nombreText.setForeground(new java.awt.Color(255, 255, 255));
        nombreText.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        nombreText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreTextActionPerformed(evt);
            }
        });

        ciText.setBackground(new java.awt.Color(153, 153, 255));
        ciText.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        ciText.setForeground(new java.awt.Color(255, 255, 255));
        ciText.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        ciText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciTextActionPerformed(evt);
            }
        });

        fechaText.setBackground(new java.awt.Color(153, 153, 255));
        fechaText.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        fechaText.setForeground(new java.awt.Color(255, 255, 255));
        fechaText.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        fechaText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaTextActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Fecha:");

        javax.swing.GroupLayout datosPanelLayout = new javax.swing.GroupLayout(datosPanel);
        datosPanel.setLayout(datosPanelLayout);
        datosPanelLayout.setHorizontalGroup(
            datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datosPanelLayout.createSequentialGroup()
                        .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreText, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apellidoText, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addGroup(datosPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel3))))
                    .addGroup(datosPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(datosPanelLayout.createSequentialGroup()
                                .addComponent(ciText, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                                .addComponent(fechaText, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5))))
                .addContainerGap())
        );
        datosPanelLayout.setVerticalGroup(
            datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanelLayout.createSequentialGroup()
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apellidoText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ciText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fechaText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        bg.add(datosPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 300, 130));

        listaSalas.setBackground(new java.awt.Color(102, 0, 102));
        listaSalas.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        listaSalas.setForeground(new java.awt.Color(255, 255, 255));
        listaSalas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaSalasActionPerformed(evt);
            }
        });
        bg.add(listaSalas, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 250, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Datos del Cliente");
        bg.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 230, 40));

        peliculasComboBox.setBackground(new java.awt.Color(102, 0, 102));
        peliculasComboBox.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        peliculasComboBox.setForeground(new java.awt.Color(255, 255, 255));
        peliculasComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peliculasComboBoxActionPerformed(evt);
            }
        });
        bg.add(peliculasComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 250, 30));

        seleccionaSala.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        seleccionaSala.setForeground(new java.awt.Color(255, 255, 255));
        seleccionaSala.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        seleccionaSala.setText("Selecciona Sala:");
        bg.add(seleccionaSala, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 230, 40));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Formato:");
        bg.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 260, 80, 40));

        paraTotalPanel.setBackground(new java.awt.Color(102, 0, 102));

        paraPrecio.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        paraPrecio.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout paraTotalPanelLayout = new javax.swing.GroupLayout(paraTotalPanel);
        paraTotalPanel.setLayout(paraTotalPanelLayout);
        paraTotalPanelLayout.setHorizontalGroup(
            paraTotalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paraTotalPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(paraPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        paraTotalPanelLayout.setVerticalGroup(
            paraTotalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paraTotalPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(paraPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bg.add(paraTotalPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 320, 130, -1));

        cancelarBtn.setBackground(new java.awt.Color(255, 0, 0));
        cancelarBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cancelarBtn.setForeground(new java.awt.Color(255, 255, 255));
        cancelarBtn.setText("CANCELAR");
        cancelarBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelarBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelarBtnMouseExited(evt);
            }
        });
        cancelarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBtnActionPerformed(evt);
            }
        });
        bg.add(cancelarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 430, 170, 40));

        buscarBtn.setBackground(new java.awt.Color(0, 0, 255));
        buscarBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buscarBtn.setForeground(new java.awt.Color(255, 255, 255));
        buscarBtn.setText("Buscar Funcion");
        buscarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBtnActionPerformed(evt);
            }
        });
        bg.add(buscarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 170, 50));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Selecciona Horario:");
        bg.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 230, 40));

        horarioComboBox1.setBackground(new java.awt.Color(102, 0, 102));
        horarioComboBox1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        horarioComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        horarioComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horarioComboBox1ActionPerformed(evt);
            }
        });
        bg.add(horarioComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 250, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Selecciona Pelicula:");
        bg.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 230, 40));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Precio del Boleto");
        bg.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 310, 160, 40));

        jPanel2.setBackground(new java.awt.Color(102, 0, 102));

        paraFormato.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        paraFormato.setForeground(new java.awt.Color(255, 255, 255));
        paraFormato.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(paraFormato, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(paraFormato, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bg.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 270, 120, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseEntered
       guardar.setBackground(Color.red);
    }//GEN-LAST:event_guardarMouseEntered

    
    public void cargarPeliculas() {
        // Verificar que la conexión no sea nula
        if (con == null) {
            System.out.println("Error: No se pudo establecer conexión con la base de datos.");
            return;
        }

        // Consulta SQL corregida
        String sql = "SELECT nombre_pelicula FROM pelicula"; 

        try (PreparedStatement pst = con.prepareStatement(sql);
             ResultSet rs = pst.executeQuery()) {

            // Crear un modelo para el JComboBox
            DefaultComboBoxModel<String> modeloPeliculas = new DefaultComboBoxModel<>();


            // Cargar las películas en el modelo
            while (rs.next()) {
                modeloPeliculas.addElement(rs.getString("nombre_pelicula"));
            }

            // Verificar si se encontraron películas
            if (modeloPeliculas.getSize() <= 1) {
                System.out.println("Advertencia: No se encontraron películas en la base de datos.");
            }

            // Asignar el modelo al JComboBox
            peliculasComboBox.setModel(modeloPeliculas);

            // Forzar actualización en la interfaz
            peliculasComboBox.repaint();
            peliculasComboBox.revalidate();

        } catch (SQLException e) {
            System.out.println("Error al cargar las películas: " + e.getMessage());
        }
    }

    private void guardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseExited
        guardar.setBackground(new Color(102,0,102));
    }//GEN-LAST:event_guardarMouseExited

    private void preceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_preceMousePressed
        xMouse=evt.getX();
        yMouse=evt.getY();
    }//GEN-LAST:event_preceMousePressed

    private void preceMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_preceMouseDragged
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        
        this.setLocation(x-xMouse,y-yMouse);
    }//GEN-LAST:event_preceMouseDragged

    private void guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseClicked

        System.exit(0);    }//GEN-LAST:event_guardarMouseClicked

    private void salirFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salirFMouseEntered
        salirF.setBackground(new Color(153,153,255));
    }//GEN-LAST:event_salirFMouseEntered

    private void salirFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salirFMouseExited
       salirF.setBackground(new Color(17,27,82));
    }//GEN-LAST:event_salirFMouseExited

    private void salirFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salirFMouseClicked
         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazInicio().setVisible(true);
            }
        });
            this.setVisible(false);
            
    }//GEN-LAST:event_salirFMouseClicked

    private void apellidoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellidoTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidoTextActionPerformed

    private void nombreTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreTextActionPerformed

    private void ciTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ciTextActionPerformed

    private void cancelarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBtnActionPerformed
          java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazAdmin().setVisible(true);
            }
        });
            this.setVisible(false);
    }//GEN-LAST:event_cancelarBtnActionPerformed

    
    private void cargarHorariosYSalas() {  
    // Verificar que la conexión no sea nula
    if (con == null) {
        JOptionPane.showMessageDialog(this, "Error: No se pudo establecer conexión con la base de datos.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Obtener la película seleccionada
    String nombrePelicula = (String) peliculasComboBox.getSelectedItem();

    // Validar que se haya seleccionado una película
    if (nombrePelicula == null || nombrePelicula.trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona una película válida.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Limpiar los modelos antes de cargar nuevos datos
    DefaultComboBoxModel<String> modeloHorarios = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<String> modeloSalas = new DefaultComboBoxModel<>();
    String formatoPelicula = null; // Reiniciar formatoPelicula en cada búsqueda
    int totalAsientos = 0; // Variable para almacenar la cantidad de asientos

    // Consulta SQL para obtener horarios, salas, formato y asientos de la película seleccionada
    String sql = "SELECT f.fecha_hora_funcion, s.nombre_sala, p.formato, f.asientos " +
                 "FROM funcion f " +
                 "JOIN pelicula p ON f.id_pelicula = p.id_pelicula " +
                 "JOIN sala s ON f.id_sala = s.id_sala " +
                 "WHERE p.nombre_pelicula = ?";

    try (PreparedStatement pst = con.prepareStatement(sql)) {
        pst.setString(1, nombrePelicula);
        ResultSet rs = pst.executeQuery();

        boolean hayResultados = false;
        SimpleDateFormat formatoHora = new SimpleDateFormat("HH:mm");

        while (rs.next()) {
            hayResultados = true;

            // Convertir timestamp a formato HH:MM
            Timestamp timestamp = rs.getTimestamp("fecha_hora_funcion");
            String horaFormato = (timestamp != null) ? formatoHora.format(timestamp) : "Hora no disponible";

            modeloHorarios.addElement(horaFormato);
            modeloSalas.addElement(rs.getString("nombre_sala"));

            // Obtener el formato de la película (solo una vez)
            if (formatoPelicula == null) {
                formatoPelicula = rs.getString("formato");
            }

            // Obtener la cantidad de asientos de la sala (solo una vez)
            totalAsientos = rs.getInt("asientos");
        }

        // Si no hay funciones disponibles
        if (!hayResultados) {
            modeloHorarios.addElement("No hay funciones disponibles");
            modeloSalas.addElement("No hay salas disponibles");
            formatoPelicula = "Formato no disponible";
            totalAsientos = 0;
        }

        // Asignar modelos a los JComboBox
        horarioComboBox1.setModel(modeloHorarios);
        listaSalas.setModel(modeloSalas);

        // Mostrar el formato de la película en el JLabel
        paraFormato.setText((formatoPelicula != null) ? " " + formatoPelicula : "Formato no disponible");

        // Asignar el número de asientos a la variable numAsientos
        numAsientos = totalAsientos; // Asignamos el valor de los asientos a la variable numAsientos

        // Forzar actualización en la interfaz gráfica
        horarioComboBox1.repaint();
        listaSalas.repaint();
        paraFormato.repaint();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al cargar horarios y salas: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
}
    
    public void obtenerPrecio() {

        // Obtener el texto SIN espacios extra
        String formato = paraFormato.getText().trim();  

        if(formato.equals("2D")){
            paraPrecio.setText("42");
        }else if(formato.equals("3D")){
            paraPrecio.setText("63");
        }else{
            paraPrecio.setText("80");
        }
    }
    //-----------------------------------------------------------------------
    public int obtenerIdSalaPorNombre(String nombreSala) {
    int idSala = -1;  // Valor predeterminado en caso de que no se encuentre la sala

    // Consulta SQL para obtener el id_sala basado en el nombre_sala
    String sql = "SELECT id_sala FROM sala WHERE nombre_sala = ?";

    try (PreparedStatement pst = con.prepareStatement(sql)) {
        // Establecer el parámetro del nombre de la sala
        pst.setString(1, nombreSala);

        // Ejecutar la consulta
        try (ResultSet rs = pst.executeQuery()) {
            // Si encontramos un resultado, obtenemos el id_sala
            if (rs.next()) {
                idSala = rs.getInt("id_sala");
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró la sala con el nombre: " + nombreSala, "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al obtener el id de la sala: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }

    return idSala;  // Retorna el id_sala o -1 si no se encuentra la sala
}
//-----------------------------------------------------------
    public int obtenerIdPeliculaPorNombre(String nombrePelicula) {
    int idPelicula = -1;  // Valor predeterminado en caso de que no se encuentre la película

    // Consulta SQL para obtener el id_pelicula basado en el nombre_pelicula
    String sql = "SELECT id_pelicula FROM pelicula WHERE nombre_pelicula = ?";

    try (PreparedStatement pst = con.prepareStatement(sql)) {
        // Establecer el parámetro del nombre de la película
        pst.setString(1, nombrePelicula);

        // Ejecutar la consulta
        try (ResultSet rs = pst.executeQuery()) {
            // Si encontramos un resultado, obtenemos el id_pelicula
            if (rs.next()) {
                idPelicula = rs.getInt("id_pelicula");
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró la película con el nombre: " + nombrePelicula, "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al obtener el id de la película: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }

    return idPelicula;  // Retorna el id_pelicula o -1 si no se encuentra la película
}
//------------------------------------
    public int obtenerIdFuncionPorParametros(int idSala, int idPelicula, String fechaHoraFuncion) {
    int idFuncion = -1;  // Valor predeterminado en caso de que no se encuentre la función

    // Consulta SQL para obtener el id_funcion basado en los parámetros proporcionados
    String sql = "SELECT id_funcion FROM funcion " +
                 "WHERE id_sala = ? AND id_pelicula = ? AND " +
                 "TO_CHAR(fecha_hora_funcion, 'HH24:MI') = ?"; // Usar TO_CHAR para formatear la hora en PostgreSQL

    try (PreparedStatement pst = con.prepareStatement(sql)) {
        // Establecer los parámetros de la consulta
        pst.setInt(1, idSala);  // Establecer el id_sala
        pst.setInt(2, idPelicula);  // Establecer el id_pelicula
        pst.setString(3, fechaHoraFuncion);  // Establecer la hora de la función (formato HH:mm)

        // Ejecutar la consulta
        try (ResultSet rs = pst.executeQuery()) {
            // Si encontramos un resultado, obtenemos el id_funcion
            if (rs.next()) {
                idFuncion = rs.getInt("id_funcion");
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró una función con los parámetros proporcionados.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al obtener el id de la función: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }

    return idFuncion;  // Retorna el id_funcion o -1 si no se encuentra la función
}



    
    
    private void cancelarBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarBtnMouseEntered
        cancelarBtn.setBackground(Color.red);
    }//GEN-LAST:event_cancelarBtnMouseEntered

    private void cancelarBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarBtnMouseExited
        cancelarBtn.setBackground(new Color(102,0,102));
    }//GEN-LAST:event_cancelarBtnMouseExited

    private void listaSalasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaSalasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listaSalasActionPerformed

    private void horarioComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horarioComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horarioComboBox1ActionPerformed

    private void buscarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBtnActionPerformed
      cargarHorariosYSalas();
      obtenerPrecio();
    }//GEN-LAST:event_buscarBtnActionPerformed

    private void guardarTicket() {
        // Verificar que la conexión no sea nula
        if (con == null) {
            JOptionPane.showMessageDialog(this, "Error: No se pudo establecer conexión con la base de datos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtener el horario seleccionado del JComboBox
        String horarioSeleccionado = (String) horarioComboBox1.getSelectedItem();

        // Validar que se haya seleccionado un horario
        if (horarioSeleccionado == null || horarioSeleccionado.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un horario válido.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Consulta SQL para obtener el id_funcion basado en el horario seleccionado
        String sqlObtenerFuncion = "SELECT id_funcion FROM funcion WHERE TO_CHAR(fecha_hora_funcion, 'HH24:MI') = ?";

        try (PreparedStatement pst = con.prepareStatement(sqlObtenerFuncion)) {
            pst.setString(1, horarioSeleccionado);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                int idFuncion = rs.getInt("id_funcion");

                // Insertar en la tabla ticket
                String sqlInsertarTicket = "INSERT INTO ticket (id_funcion, precio_ticket) VALUES (?, 22.00)";

                try (PreparedStatement pstInsert = con.prepareStatement(sqlInsertarTicket)) {
                    pstInsert.setInt(1, idFuncion);
                    int filasAfectadas = pstInsert.executeUpdate();

                    if (filasAfectadas > 0) {
                        JOptionPane.showMessageDialog(this, "Ticket guardado con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "No se pudo guardar el ticket.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró una función con el horario seleccionado.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar el ticket: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }}
    private void reservarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservarBtnActionPerformed

        if(nombreText.getText().isEmpty()||apellidoText.getText().isEmpty()||ciText.getText().isEmpty()||fechaText.getText().isEmpty()){
             JOptionPane.showMessageDialog(this, "Por favor llene todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
        }
        String peli= peliculasComboBox.getSelectedItem().toString();
        String hor = horarioComboBox1.getSelectedItem().toString();
        String sala= listaSalas.getSelectedItem().toString();
        String nombreC = nombreText.getText();
        String apellidosC = apellidoText.getText();
        String ci = ciText.getText();
        String fec= fechaText.getText();
        int idSala = obtenerIdSalaPorNombre(sala);
        int idPeli = obtenerIdPeliculaPorNombre(peli);
        int idFun = obtenerIdFuncionPorParametros(idSala,idPeli,hor);
        
       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazPago(peli,hor,idFun,usuarioCajero,nombreC,apellidosC,fec,Integer.parseInt(paraPrecio.getText()),Integer.parseInt(ci)).setVisible(true);
            }
        });
       this.setVisible(false);
    }//GEN-LAST:event_reservarBtnActionPerformed

   
    
    private void peliculasComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peliculasComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peliculasComboBoxActionPerformed

    private void fechaTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaTextActionPerformed

   



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidoText;
    private javax.swing.JPanel bg;
    private javax.swing.JButton buscarBtn;
    private javax.swing.JButton cancelarBtn;
    private javax.swing.JLabel cerrarlbl;
    private javax.swing.JTextField ciText;
    private javax.swing.JPanel datosPanel;
    private javax.swing.JTextField fechaText;
    private javax.swing.JPanel guardar;
    private javax.swing.JComboBox<String> horarioComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> listaSalas;
    private javax.swing.JPanel menu;
    private javax.swing.JLabel menulbl;
    private javax.swing.JTextField nombreText;
    private javax.swing.JLabel paraFormato;
    private javax.swing.JLabel paraPrecio;
    private javax.swing.JPanel paraTotalPanel;
    private javax.swing.JComboBox<String> peliculasComboBox;
    private javax.swing.JPanel prece;
    private javax.swing.JButton reservarBtn;
    private javax.swing.JPanel salirF;
    private javax.swing.JLabel seleccionaSala;
    // End of variables declaration//GEN-END:variables
}
